[{"path":"https://agusnieto77.github.io/ACEP/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 ACEP authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://agusnieto77.github.io/ACEP/articles/conflictividad_soip.html","id":"introducción","dir":"Articles","previous_headings":"","what":"Introducción","title":"Conflictividad laboral en la pesca","text":"En este artículo desarrollaremos una introducción al análisis de la conflictividad laboral en la industria pesquera argentina con un enfoque de diccionario en base las funciones del paquete ACEP. En esta oportunidad pondremos el foco en la conflictividad laboral protagonizada por el Sindicato Obrero de la Industria del Pescado (SOIP) en la ciudad de Mar del Plata entre los años 2009 y 2020.","code":""},{"path":"https://agusnieto77.github.io/ACEP/articles/conflictividad_soip.html","id":"el-corpus-de-notas","dir":"Articles","previous_headings":"","what":"El corpus de notas","title":"Conflictividad laboral en la pesca","text":"Las notas que componen el corpus utilizado en este ejercicio fueron raspadas del sitio revistapuerto.com.ar con las funciones del paquete rvest. Se compone de 7816 notas y 6 variables: fecha, titulo, bajada, nota, imagen, link. El corpus de notas cubre desde el 2 de marzo de 2009 hasta el 29 de diciembre de 2020. Para cargar todas las notas haremos uso de la función acep_load_base().","code":"# Cargamos la librería ACEP library(ACEP)  # Definimos la url url <- acep_bases$rp_mdp  # Descargamos el corpus de notas de la Revista Puerto rev_puerto <- acep_load_base(url) #> Descargando...  # Imprimimos la base en consola rev_puerto #> # A tibble: 7,816 × 6 #>    fecha      titulo                                   bajada nota  imagen link  #>  * <date>     <chr>                                    <chr>  <chr> <chr>  <chr> #>  1 2020-12-29 ¡Feliz Año 2021 para todos nuestros ami… Con m… \"Con… https… http… #>  2 2020-12-28 Mapa del trabajo esclavo en aguas inter… Un re… \"El … https… http… #>  3 2020-12-24 Plantas piden tener garantizada la prov… En Ch… \"El … https… http… #>  4 2020-12-24 Los obreros navales despiden el año ana… En Ma… \"El … https… http… #>  5 2020-12-23 El incumplimiento del régimen de cuotif… Se ll… \"Las… https… http… #>  6 2020-12-23 Otro fallo ratifica cautelar contra el … La Cá… \"La … https… http… #>  7 2020-12-22 Recomendaciones de SENASA para las expo… Desde… \"En … https… http… #>  8 2020-12-22 Trelew consolida su inserción en la ind… En 20… \"Ins… https… http… #>  9 2020-12-21 El CFP presentó el estado y la captura … En la… \"Ant… https… http… #> 10 2020-12-21 La flota amarilla cierra el año con sos… Puert… \"El … https… http… #> # … with 7,806 more rows"},{"path":"https://agusnieto77.github.io/ACEP/articles/conflictividad_soip.html","id":"los-diccionarios","dir":"Articles","previous_headings":"","what":"Los diccionarios","title":"Conflictividad laboral en la pesca","text":"Una vez descargada la base de notas vamos crear variables numéricas que contenga las frecuencias de palabras totales y de cada diccionario usado para cada una de las notas. En esta parte del código haremos uso de tres funciones y un diccionario del paquete ACEP: acep_frec(), acep_men(), acep_load_base() y acep_diccionarios. También crearemos dos diccionarios breves para usarlos en la función acep_men() con un doble objetivo: 1) identificar las notas que refieran huelgas; 2) identificar las notas que refieran lxs trabajadorxs del procesamiento de pescado en tierra en la ciudad de Mar del Plata.","code":"# Creamos la variable con la frecuencia de palabras por nota rev_puerto$frec_palabras <- acep_frec(rev_puerto$nota)  # Cargamos el diccionario de palabras que refieren a conflictividad dicc_conflictos <- acep_load_base(acep_diccionarios$dicc_confl_sismos) #> Descargando...  # Creamos la variable con la frecuencia de palabras que refieren a conflictividad rev_puerto$frec_conflictos <- acep_men(rev_puerto$nota, dicc_conflictos)  # Creamos el diccionario de palabras que refieren a huelgas dicc_huelgas <- c(\"en paro\", \"al paro\", \"huelga\", \"huelguistas\", \"paro y movil\",                   \"paro de actividades\", \"conciliación obligatoria\", \"un paro\",                    \"paro total\", \"paro parcial\", \"trabajo a reglamento\",                    \"el paro\", \"de brazos caídos\")  # Creamos la variable con la frecuencia de palabras que refieren a huelgas rev_puerto$frec_huelgas <- acep_men(rev_puerto$nota, dicc_huelgas)  # Creamos el diccionario de palabras que refieren a lxs obrerxs del pescado dicc_soip <- c(\"soip\", \"sindicato obrero de la industria del pescado\",                 \"sindicato de la industria del pescado\", \"huelguistas\",                 \"obreras de la industria del pescado\", \"obreras del pescado\",                \"obreros de la industria del pescado\", \"obreros del pescado\",                \"fileteros\", \"fileteras\", \"obreros del filet\", \"obreras del filet\")  # Creamos la variable con la frecuencia de palabras que  # refieren a lxs obrerxs del pescado rev_puerto$frec_soip <- acep_men(rev_puerto$nota, dicc_soip)  # Imprimimos la base en consola rev_puerto #> # A tibble: 7,816 × 10 #>    fecha      titulo   bajada nota  imagen link  frec_…¹ frec_…² frec_…³ frec_…⁴ #>    <date>     <chr>    <chr>  <chr> <chr>  <chr>   <dbl>   <dbl>   <dbl>   <dbl> #>  1 2020-12-29 ¡Feliz … Con m… \"Con… https… http…      31       0       0       0 #>  2 2020-12-28 Mapa de… Un re… \"El … https… http…    1128       4       0       0 #>  3 2020-12-24 Plantas… En Ch… \"El … https… http…     530       3       0       0 #>  4 2020-12-24 Los obr… En Ma… \"El … https… http…     483       8       0       0 #>  5 2020-12-23 El incu… Se ll… \"Las… https… http…     525       4       2       0 #>  6 2020-12-23 Otro fa… La Cá… \"La … https… http…     462       6       0       0 #>  7 2020-12-22 Recomen… Desde… \"En … https… http…     650       0       0       0 #>  8 2020-12-22 Trelew … En 20… \"Ins… https… http…     830       4       0       0 #>  9 2020-12-21 El CFP … En la… \"Ant… https… http…    1434       3       0       0 #> 10 2020-12-21 La flot… Puert… \"El … https… http…    1056       4       0       0 #> # … with 7,806 more rows, and abbreviated variable names ¹​frec_palabras, #> #   ²​frec_conflictos, ³​frec_huelgas, ⁴​frec_soip"},{"path":"https://agusnieto77.github.io/ACEP/articles/conflictividad_soip.html","id":"los-índices","dir":"Articles","previous_headings":"","what":"Los índices","title":"Conflictividad laboral en la pesca","text":"Ya construidas las variables de frecuencia de palabras y menciones nos ocuparemos de elaborar nuevas variables con índices de intensidad en base al ratio entre las frecuencias de palabras totales y las menciones de los diccionarios sobre trabajadorxs del pescado, conflictos y huelgas. Para la elaboración de estos índices haremos uso de la función acep_int() del paquete ACEP. Al realizar los filtros la base se redujo 888 notas que presentan al menos una mención de una palabra que refiere conflicto y al menos un término que refiere lxs trabajadorxs del pescado.","code":"# Creamos la variable con el índice de conflictividad general rev_puerto$i_conf_gral <- acep_int(rev_puerto$frec_conflictos,                                     rev_puerto$frec_palabras)  # Creamos la variable con el índice de incidencia  # de lxs trabajadorxs del pescado rev_puerto$i_soip <- acep_int(rev_puerto$frec_soip,                                rev_puerto$frec_palabras)  # Creamos la variable con el índice de huelgas rev_puerto$i_huelgas <- acep_int(rev_puerto$frec_huelgas,                                   rev_puerto$frec_conflictos)  # Filtramos para quedarnos con los índices mayores a 0  # en la variable del índice de conflictividad general rev_puerto <- rev_puerto[rev_puerto$i_conf_gral > 0, ]  # Filtramos para quedarnos con los índices mayores a 0 # en el índice de incidencia de lxs trabajadorxs del pescado rev_puerto <- rev_puerto[rev_puerto$i_soip > 0, ]  # Imprimimos la base en consola rev_puerto #> # A tibble: 888 × 13 #>    fecha      titulo   bajada nota  imagen link  frec_…¹ frec_…² frec_…³ frec_…⁴ #>    <date>     <chr>    <chr>  <chr> <chr>  <chr>   <dbl>   <dbl>   <dbl>   <dbl> #>  1 2020-12-04 SOIP pi… \"El g… \"Lue… https… http…     500       4       0       2 #>  2 2020-11-27 Se acor… \"Es u… \"Tal… https… http…     517       2       0       1 #>  3 2020-11-24 Mardi, … \"Con … \"Tra… https… http…    1125       1       0       4 #>  4 2020-11-16 Cierran… \"El v… \"Des… https… http…     380       4       0       5 #>  5 2020-11-13 CaIPA-S… \"Las … \"Lo … https… http…     376       3       0       5 #>  6 2020-10-30 Conflic… \"El S… \"La … https… http…     680       3       0       3 #>  7 2020-10-12 Obreros… \"Pert… \"Un … https… http…     421       6       0       2 #>  8 2020-10-07 Langost… \"El m… \"El … https… http…    1104       5       0       2 #>  9 2020-09-15 Corvina… \"Áfri… \"La … https… http…     661       5       0       1 #> 10 2020-08-31 Peón de… \"Es u… \"Víc… https… http…     747       5       0       2 #> # … with 878 more rows, 3 more variables: i_conf_gral <dbl>, i_soip <dbl>, #> #   i_huelgas <dbl>, and abbreviated variable names ¹​frec_palabras, #> #   ²​frec_conflictos, ³​frec_huelgas, ⁴​frec_soip"},{"path":"https://agusnieto77.github.io/ACEP/articles/conflictividad_soip.html","id":"serie-temporal-de-índices","dir":"Articles","previous_headings":"","what":"Serie temporal de índices","title":"Conflictividad laboral en la pesca","text":"En esta parte del código usaremos la función acep_rst() para calcular los índices agrupados por año y mes. Primero construimos la serie de tiempo para la conflictividad general. En la siguiente parte del código construimos la serie de tiempo para la conflictividad huelguística.","code":"# Calculamos el índice anual de conflictividad general en el # ámbito de la industrial del procesado de pescado en tierra # Pero primero preparamos el marcos de datos para ser procesado  # por la función acep_rst() # Estos pasos previos se deben realizar porque en este ejemplo no hicimos uso  # de la función acep_db() que calcula frecuencia, menciones e intensidad y # deja el marco de datos resultante en un formato adecuado para ser usado # con la función acep_rst() datos <- data.frame(   fecha = rev_puerto$fecha,   n_palabras = rev_puerto$frec_palabras,   conflictos = rev_puerto$frec_conflictos,   intensidad = rev_puerto$i_conf_gral )  # Luego construimos los vectores fecha <- datos$fecha n_palabras <- datos$n_palabras conflictos <- datos$conflictos  # Ahora agrupamos por mes la conflictividad general del sector conf_gral_anio <- acep_rst(datos,                        fecha,                        n_palabras,                       conflictos,                       st = \"anio\")  # Imprimimos la base en consola conf_gral_anio |> head() #>     st frecn csn  frecp frecm  intac intensidad int_notas_confl #> 1 2009    51  36  41178   251 0.3315     0.0061          0.7059 #> 2 2010    50  37  40036   308 0.4259     0.0077          0.7400 #> 3 2011   106  79  74779   648 1.0012     0.0087          0.7453 #> 4 2012   149 121 119419  1020 1.3347     0.0085          0.8121 #> 5 2013   101  67  80654   596 0.7576     0.0074          0.6634 #> 6 2014    84  60  50679   430 0.7425     0.0085          0.7143 # Calculamos el índice mensual de conflictividad general en el # ámbito de la industrial del procesado de pescado en tierra # Pero primero preparamos el marcos de datos para ser procesado  # por la función acep_rst() datos <- data.frame(   fecha = rev_puerto$fecha,   n_palabras = rev_puerto$frec_palabras,   conflictos = rev_puerto$frec_conflictos,   intensidad = rev_puerto$i_conf_gral )  # Nos quedamos con los datos del año 2012  datos <-  datos[datos$fecha < \"2013-01-01\", ] datos <-  datos[datos$fecha > \"2011-12-31\", ]  # Luego construimos los vectores fecha <- datos$fecha n_palabras <- datos$n_palabras conflictos <- datos$conflictos  # Ahora agrupamos por mes la conflictividad general del sector conf_gral <- acep_rst(datos,                        fecha,                        n_palabras,                       conflictos)  # Imprimimos la base en consola conf_gral |> head() #>        st frecn csn frecp frecm  intac intensidad int_notas_confl #> 1 2012-01    14  12 10930    78 0.1180     0.0071          0.8571 #> 2 2012-02     5   5  3122    22 0.0355     0.0070          1.0000 #> 3 2012-03    18  10 12100    61 0.0980     0.0050          0.5556 #> 4 2012-04    11  11  8615    89 0.1206     0.0103          1.0000 #> 5 2012-05    12  11 10194   133 0.1641     0.0130          0.9167 #> 6 2012-06    17  15 14001   163 0.1961     0.0116          0.8824 # Calculamos el índice mensual de conflictividad huelguística en el # ámbito de la industrial del procesado de pescado en tierra # Pero primero preparamos el marcos de datos para ser procesado  # por la función acep_rst() datosh <- data.frame(   fecha = rev_puerto$fecha,   n_palabras = rev_puerto$frec_palabras,   conflictos = rev_puerto$frec_huelgas,   intensidad = rev_puerto$i_huelgas )  # Nos quedamos con los datos del año 2012   datosh <-  datosh[datosh$fecha < \"2013-01-01\", ] datosh <-  datosh[datosh$fecha > \"2011-12-31\", ]  # Luego construimos los vectores fechah <- datosh$fecha n_palabrash <- datosh$n_palabras conflictosh <- datosh$conflictos  # Ahora agrupamos por mes la conflictividad huelguística del sector huelgas <- acep_rst(datosh,                      fechah,                      n_palabrash,                     conflictosh)  # Imprimimos la base en consola huelgas |> head() #>        st frecn csn frecp frecm  intac intensidad int_notas_confl #> 1 2012-01    14   0 10930     0 0.0000     0.0000          0.0000 #> 2 2012-02     5   0  3122     0 0.0000     0.0000          0.0000 #> 3 2012-03    18   0 12100     0 0.0000     0.0000          0.0000 #> 4 2012-04    11   0  8615     8 0.9010     0.0009          0.0000 #> 5 2012-05    12   2 10194    17 1.2651     0.0017          0.1667 #> 6 2012-06    17   2 14001    19 1.4480     0.0014          0.1176"},{"path":"https://agusnieto77.github.io/ACEP/articles/conflictividad_soip.html","id":"las-visualizaciones","dir":"Articles","previous_headings":"","what":"Las visualizaciones","title":"Conflictividad laboral en la pesca","text":"En este último apartado haremos uso de las funciones acep_plot_st() y acep_plot_rst() para visualizar la variación anual de la conflictividad general protagonizada por lxs trabajadorxs del pescado entre marzo de 2009 y diciembre de 2020. También visualizaremos la variación mensual durante el año 2012, el más conflictivo de período bajo análisis.     Las distintas métricas nos ayudan identificar al año 2012 como el más conflictivo del período en el ámbito de la industria pesquera de procesado en tierra en la ciudad de Mar del Plata, con epicentro en los meses de junio, julio y agosto para la conflictividad general y con epicentro en los meses de mayo, junio y julio para los movimientos huelguísticos.","code":"# Visualizaremos el índice de conflictividad general  # agrupado por año para el período 2009-2020 acep_plot_st(  conf_gral_anio$st,  conf_gral_anio$frecm,  t = \"Indice anual de conflictividad en la industria pesquera (MdP)\",  ejey = \"Menciones del diccionario\",  etiquetax = \"vertical\"              ) # Visualizaremos el índice de conflictividad general  # agrupado por año para el período 2009-2020 acep_plot_rst(conf_gral_anio, tagx = \"vertical\") # Visualizaremos el índice de conflictividad general  # agrupado por mes para el 2012 acep_plot_st(  conf_gral$st,  conf_gral$frecm,  t = \"Indice mensual de conflictos en la industria pesquera (MdP)\",  ejey = \"Menciones del diccionario\",  etiquetax = \"vertical\"              ) # Visualizaremos el índice de conflictividad huelguística  # agrupado por mes para el 2012 acep_plot_st(  huelgas$st,  huelgas$frecm,  t = \"Indice mensual de huelgas en la industria pesquera (MdP)\",  ejey = \"Menciones del diccionario\",  etiquetax = \"vertical\"              )"},{"path":"https://agusnieto77.github.io/ACEP/articles/conflictividad_soip.html","id":"comentarios-finales","dir":"Articles","previous_headings":"","what":"Comentarios finales","title":"Conflictividad laboral en la pesca","text":"lo largo de este breve tutorial sobre algunas de las funciones del paquete ACEP buscamos ejemplificar de qué modo se puede adoptar un enfoque de diccionario para realizar un primer análisis exploratorio de un corpus de notas periodísticas. Los resultados son alentadores. Con la combinación de distintos diccionarios se pudo identificar la temporalidad de la conflictividad protagonizada por lxs obrerxs del pescado en la ciudad de Mar del Plata. En próximos artículos avanzaremos con otras funciones del paquete ACEP para el análisis computacional de la conflictividad en la industria pesquera argentina.","code":""},{"path":"https://agusnieto77.github.io/ACEP/articles/limpieza_de_texto_con_acep.html","id":"to-lower","dir":"Articles","previous_headings":"","what":"to lower","title":"Limpieza de texto con ACEP","text":"El parámetro tolower refiere llevar todo el texto minúscula. Teniendo en cuenta que R es un software “case sensitive” (es decir, sensible las mayúsculas y minúsculas) resulta de interés que todas las palabras queden en minúscula para que al realizar un conteo, se consideren distintas las palabras que difieran en el tipeo de mayúscula o minúscula. Lo que haremos será aislar cada uno de los parámetros, poniéndolos en FALSE excepción del que queremos probar. En primer lugar cargamos la base de ejemplo: Seleccionemos ahora tan sólo un tweet: Vemos que tiene algunas letras en mayúscula. Aplicamos el parámetro tolower de la función acep_clean() y verificamos el resultado. Efectivamente, los caracteres en mayúscula pasan minúscula.","code":"library(ACEP)  url <- \"https://observatoriodeconflictividad.org/basesdatos/la_fraternidad.rds\"  base <- acep_load_base(url)[ , c(\"text\")]$text primer_tweet <- base[2]  primer_tweet #> [1] \"👉PROTESTA/La Fraternidad desoye conciliación obligatoria y mantiene paralizados los trenes\\nhttps://t.co/644Ak0HZ7I\" minus <- acep_clean(primer_tweet,                tolower = TRUE,                rm_cesp = FALSE,                rm_emoji = FALSE,                rm_hashtag = FALSE,                rm_users = FALSE,                rm_punt = FALSE,                rm_num = FALSE,                rm_url = FALSE,                rm_meses = FALSE,                rm_dias = FALSE,                rm_stopwords = FALSE,                rm_shortwords = FALSE,                rm_newline = FALSE,                rm_whitespace = FALSE,                other_sw = NULL)  cat(paste(\"****SIN tolower****\\n\", primer_tweet, \"****\\n\", sep=\"\")) #> ****SIN tolower**** #> 👉PROTESTA/La Fraternidad desoye conciliación obligatoria y mantiene paralizados los trenes #> https://t.co/644Ak0HZ7I****  cat(paste(\"****CON tolower****\\n\", minus, \"****\\n\", sep=\"\")) #> ****CON tolower**** #> 👉protesta/la fraternidad desoye conciliación obligatoria y mantiene paralizados los trenes #> https://t.co/644ak0hz7i****"},{"path":"https://agusnieto77.github.io/ACEP/articles/limpieza_de_texto_con_acep.html","id":"rm_cesp","dir":"Articles","previous_headings":"","what":"rm_cesp","title":"Limpieza de texto con ACEP","text":"El parámetros rm_cesp refiere los caracteres especiales. Es común que en una base conformada por tweets (aunque solamente) aparezcan muchos caracteres especiales tales como tildes. Estos caracteres hacen ningún aporte al análisis semántico por lo que es conveniente removerlos. Al igual que el caso anterior, aislamos el parámetro rm_cesp. En este caso hay sólo una tilde en “conciliación” y fue removida.","code":"cesp <- acep_clean(primer_tweet,                      tolower = FALSE,                      rm_cesp = TRUE,                      rm_emoji = FALSE,                      rm_hashtag = FALSE,                      rm_users = FALSE,                      rm_punt = FALSE,                      rm_num = FALSE,                      rm_url = FALSE,                      rm_meses = FALSE,                      rm_dias = FALSE,                      rm_stopwords = FALSE,                      rm_shortwords = FALSE,                      rm_newline = FALSE,                      rm_whitespace = FALSE,                      other_sw = NULL)  cat(paste(\"****SIN rm_cesp****\\n\", primer_tweet, \"****\\n\", sep=\"\")) #> ****SIN rm_cesp**** #> 👉PROTESTA/La Fraternidad desoye conciliación obligatoria y mantiene paralizados los trenes #> https://t.co/644Ak0HZ7I****  cat(paste(\"****CON rm_cesp****\\n\", cesp, \"****\\n\", sep=\"\")) #> ****CON rm_cesp**** #> 👉PROTESTA/La Fraternidad desoye conciliacion obligatoria y mantiene paralizados los trenes #> https://t.co/644Ak0HZ7I****"},{"path":"https://agusnieto77.github.io/ACEP/articles/limpieza_de_texto_con_acep.html","id":"emoji","dir":"Articles","previous_headings":"","what":"Emoji","title":"Limpieza de texto con ACEP","text":"Es común que aparezcan emojis en tweets o texto obtenido través de redes sociales. Estos caracteres puede ser problemáticos para el análisis de texto y por este motivo se remueven con el parámetro rm_emoji.","code":"emoji <- acep_clean(primer_tweet,                      tolower = FALSE,                      rm_cesp = FALSE,                      rm_emoji = TRUE,                      rm_hashtag = FALSE,                      rm_users = FALSE,                      rm_punt = FALSE,                      rm_num = FALSE,                      rm_url = FALSE,                      rm_meses = FALSE,                      rm_dias = FALSE,                      rm_stopwords = FALSE,                      rm_shortwords = FALSE,                      rm_newline = FALSE,                      rm_whitespace = FALSE,                      other_sw = NULL)  cat(paste(\"****SIN rm_emoji****\\n\", primer_tweet, \"***\\n\", sep=\"\")) #> ****SIN rm_emoji**** #> 👉PROTESTA/La Fraternidad desoye conciliación obligatoria y mantiene paralizados los trenes #> https://t.co/644Ak0HZ7I***  cat(paste(\"****CON rm_emoji****\\n\", emoji, \"****\\n\", sep=\"\")) #> ****CON rm_emoji**** #>  PROTESTA/La Fraternidad desoye conciliación obligatoria y mantiene paralizados los trenes #> https://t.co/644Ak0HZ7I****"},{"path":"https://agusnieto77.github.io/ACEP/articles/limpieza_de_texto_con_acep.html","id":"hashtag","dir":"Articles","previous_headings":"","what":"Hashtag","title":"Limpieza de texto con ACEP","text":"Los #hashtags son muy comunes en los textos de redes sociales. Son también caracteres que esconden palabras cuando realizamos un análisis semántico. Para removerlos, utilizamos el parámetro rm_hashtag. Utilizamos otro tweet de la base que contiene #hashtag NOTA: se elimina todo el #hashtags, sólo el símbolo (#Transporte)","code":"con_hash <- base[40] hash <- acep_clean(base[40],                      tolower = FALSE,                      rm_cesp = FALSE,                      rm_emoji = FALSE,                      rm_hashtag = TRUE,                      rm_users = FALSE,                      rm_punt = FALSE,                      rm_num = FALSE,                      rm_url = FALSE,                      rm_meses = FALSE,                      rm_dias = FALSE,                      rm_stopwords = FALSE,                      rm_shortwords = FALSE,                      rm_newline = FALSE,                      rm_whitespace = FALSE,                      other_sw = NULL)  cat(paste(\"****SIN rm_hashtag****\\n\", con_hash, \"****\\n\", sep=\"\")) #> ****SIN rm_hashtag**** #> #Transporte | El gremio de los ferroviarios realiza un paro desde las 00hs en el marco de un conflicto por el reclamo del pago de un bono de 50 mil pesos a jubilados y pensionados. Miles de usuarios se ven afectados. #> https://t.co/1bHDoEVS76****  cat(paste(\"****CON rm_hashtag****\\n\", hash, \"****\\n\", sep=\"\")) #> ****CON rm_hashtag**** #>  | El gremio de los ferroviarios realiza un paro desde las 00hs en el marco de un conflicto por el reclamo del pago de un bono de 50 mil pesos a jubilados y pensionados. Miles de usuarios se ven afectados. #> https://t.co/1bHDoEVS76****"},{"path":"https://agusnieto77.github.io/ACEP/articles/limpieza_de_texto_con_acep.html","id":"users","dir":"Articles","previous_headings":"","what":"Users","title":"Limpieza de texto con ACEP","text":"La mención de usuarios es algo que suele aparecer en análisis de texto en redes. Respuestas otros tweets o menciones usuarios que queremos remover. Para esto utilizamos el parámetro rm_users NOTA: Igual que con el #hashtag, quita todo, sólo el símbolo @","code":"con_user <- base[12] user <- acep_clean(base[12],                      tolower = FALSE,                      rm_cesp = FALSE,                      rm_emoji = FALSE,                      rm_hashtag = FALSE,                      rm_users = TRUE,                      rm_punt = FALSE,                      rm_num = FALSE,                      rm_url = FALSE,                      rm_meses = FALSE,                      rm_dias = FALSE,                      rm_stopwords = FALSE,                      rm_shortwords = FALSE,                      rm_newline = FALSE,                      rm_whitespace = FALSE,                      other_sw = NULL)  cat(paste(\"****SIN rm_users****\\n\", con_user, \"****\\n\", sep=\"\")) #> ****SIN rm_users**** #> @TrenesArg Estaría bueno que empiecen por corroborar las empresas tercerizadas dónde la mayoría de los principales accionistas forman parte de la fraternidad. También son tan forros que discriminan a los trabajadores que se la pasan caminando en las vías para que el servicio funcione.****  cat(paste(\"****CON rm_users****\\n\", user, \"****\\n\", sep=\"\")) #> ****CON rm_users**** #>  Estaría bueno que empiecen por corroborar las empresas tercerizadas dónde la mayoría de los principales accionistas forman parte de la fraternidad. También son tan forros que discriminan a los trabajadores que se la pasan caminando en las vías para que el servicio funcione.****"},{"path":"https://agusnieto77.github.io/ACEP/articles/limpieza_de_texto_con_acep.html","id":"puntuación","dir":"Articles","previous_headings":"","what":"Puntuación","title":"Limpieza de texto con ACEP","text":"La puntuación son caracteres que pueden aparecer muchísimas veces, pero nuevamente, aportan la compresión lectora pero al conteo de palabras o análisis semántica. La podemos remover con el parámetro rm_punt.","code":"punt <- base[13] s_punt <- acep_clean(base[13],                      tolower = FALSE,                      rm_cesp = FALSE,                      rm_emoji = FALSE,                      rm_hashtag = FALSE,                      rm_users = FALSE,                      rm_punt = TRUE,                      rm_num = FALSE,                      rm_url = FALSE,                      rm_meses = FALSE,                      rm_dias = FALSE,                      rm_stopwords = FALSE,                      rm_shortwords = FALSE,                      rm_newline = FALSE,                      rm_whitespace = FALSE,                      other_sw = NULL)  cat(paste(\"****SIN rm_punt****\\n\", punt, \"****\\n\", sep=\"\")) #> ****SIN rm_punt**** #> Sociedad: Paro de trenes: La Fraternidad no acató la conciliación y no habrá servicio en el país #> ✍️por Agostina Carlesso  #> 👉https://t.co/WI6mzHYM1i #> #InformacionEsPoder****  cat(paste(\"****CON rm_punt****\\n\", s_punt, \"****\\n\", sep=\"\")) #> ****CON rm_punt**** #> Sociedad  Paro de trenes  La Fraternidad no acató la conciliación y no habrá servicio en el país #> ✍ por Agostina Carlesso  #> 👉https   t co WI6mzHYM1i #> #InformacionEsPoder****"},{"path":"https://agusnieto77.github.io/ACEP/articles/limpieza_de_texto_con_acep.html","id":"números","dir":"Articles","previous_headings":"","what":"Números","title":"Limpieza de texto con ACEP","text":"Siguiendo la misma lógica, los números aportan información relevante y requieren ser limpiados de nuestra base. Más aún en análisis de texto obtenido través de redes sociales, ya sea por nombres de usuario o información codificada, aparece una gran cantidad de números. Se remueve con el parámetro rm_num.","code":"num <- base[70] num_s <- acep_clean(base[70],                      tolower = FALSE,                      rm_cesp = FALSE,                      rm_emoji = FALSE,                      rm_hashtag = FALSE,                      rm_users = FALSE,                      rm_punt = FALSE,                      rm_num = TRUE,                      rm_url = FALSE,                      rm_meses = FALSE,                      rm_dias = FALSE,                      rm_stopwords = FALSE,                      rm_shortwords = FALSE,                      rm_newline = FALSE,                      rm_whitespace = FALSE,                      other_sw = NULL)  cat(paste(\"****SIN rm_num****\\n\", num, \"****\\n\", sep=\"\")) #> ****SIN rm_num**** #> Del 14 al 20 de noviembre celebramos la V #FMSemanaSVL bajo el lema “Cede el paso a una conducción segura”.  #>  #> Este año contaremos con grandes profesionales en nuestras jornadas virtuales y presenciales. #>  #>  Consulta aquí todo el programa 🔗https://t.co/rXOewZj0ih  #>  #> ¡Te esperamos! https://t.co/vJHkN3nYFo****  cat(paste(\"****CON rm_num****\\n\", num_s, \"****\\n\", sep=\"\")) #> ****CON rm_num**** #> Del  al  de noviembre celebramos la V #FMSemanaSVL bajo el lema “Cede el paso a una conducción segura”.  #>  #> Este año contaremos con grandes profesionales en nuestras jornadas virtuales y presenciales. #>  #>  Consulta aquí todo el programa 🔗https://t.co/rXOewZjih  #>  #> ¡Te esperamos! https://t.co/vJHkNnYFo****"},{"path":"https://agusnieto77.github.io/ACEP/articles/limpieza_de_texto_con_acep.html","id":"urls","dir":"Articles","previous_headings":"","what":"URLs","title":"Limpieza de texto con ACEP","text":"Las URLs aparecen comúnmente, links o imágenes que se codifican como urls. Para removerlas usamos el parámetro rm_url","code":"num <- base[70] num_s <- acep_clean(base[70],                      tolower = FALSE,                      rm_cesp = FALSE,                      rm_emoji = FALSE,                      rm_hashtag = FALSE,                      rm_users = FALSE,                      rm_punt = FALSE,                      rm_num = FALSE,                      rm_url = TRUE,                      rm_meses = FALSE,                      rm_dias = FALSE,                      rm_stopwords = FALSE,                      rm_shortwords = FALSE,                      rm_newline = FALSE,                      rm_whitespace = FALSE,                      other_sw = NULL)  cat(paste(\"****SIN rm_url****\\n\", num, \"****\\n\", sep=\"\")) #> ****SIN rm_url**** #> Del 14 al 20 de noviembre celebramos la V #FMSemanaSVL bajo el lema “Cede el paso a una conducción segura”.  #>  #> Este año contaremos con grandes profesionales en nuestras jornadas virtuales y presenciales. #>  #>  Consulta aquí todo el programa 🔗https://t.co/rXOewZj0ih  #>  #> ¡Te esperamos! https://t.co/vJHkN3nYFo****  cat(paste(\"****CON rm_url****\\n\", num_s,  \"****\\n\", sep=\"\")) #> ****CON rm_url**** #> Del 14 al 20 de noviembre celebramos la V #FMSemanaSVL bajo el lema “Cede el paso a una conducción segura”.  #>  #> Este año contaremos con grandes profesionales en nuestras jornadas virtuales y presenciales. #>  #>  Consulta aquí todo el programa 🔗  #>  #> ¡Te esperamos! ****"},{"path":"https://agusnieto77.github.io/ACEP/articles/limpieza_de_texto_con_acep.html","id":"meses","dir":"Articles","previous_headings":"","what":"Meses","title":"Limpieza de texto con ACEP","text":"En el caso de querer remover meses del año, podemos utilizar el parámetro rm_meses. En este caso, el tweet tiene la palabra “noviembre”","code":"meses <- base[70] meses_s <- acep_clean(base[70],                      tolower = FALSE,                      rm_cesp = FALSE,                      rm_emoji = FALSE,                      rm_hashtag = FALSE,                      rm_users = FALSE,                      rm_punt = FALSE,                      rm_num = FALSE,                      rm_url = FALSE,                      rm_meses = TRUE,                      rm_dias = FALSE,                      rm_stopwords = FALSE,                      rm_shortwords = FALSE,                      rm_newline = FALSE,                      rm_whitespace = FALSE,                      other_sw = NULL)  cat(paste(\"****SIN rm_mes****\\n\", meses, \"****\\n\", sep=\"\")) #> ****SIN rm_mes**** #> Del 14 al 20 de noviembre celebramos la V #FMSemanaSVL bajo el lema “Cede el paso a una conducción segura”.  #>  #> Este año contaremos con grandes profesionales en nuestras jornadas virtuales y presenciales. #>  #>  Consulta aquí todo el programa 🔗https://t.co/rXOewZj0ih  #>  #> ¡Te esperamos! https://t.co/vJHkN3nYFo****  cat(paste(\"****CON rm_mes****\\n\", meses_s, \"****\\n\", sep=\"\")) #> ****CON rm_mes**** #> Del 14 al 20 de  celebramos la V #FMSemanaSVL bajo el lema “Cede el paso a una conducción segura”.  #>  #> Este año contaremos con grandes profesionales en nuestras jornadas virtuales y presenciales. #>  #>  Consulta aquí todo el programa 🔗https://t.co/rXOewZj0ih  #>  #> ¡Te esperamos! https://t.co/vJHkN3nYFo****"},{"path":"https://agusnieto77.github.io/ACEP/articles/limpieza_de_texto_con_acep.html","id":"días","dir":"Articles","previous_headings":"","what":"Días","title":"Limpieza de texto con ACEP","text":"En el caso de querer remover días de la semana, podemos utilizar el parámetro rm_dias. En este caso, el tweet tiene la palabra “martes”","code":"dia <- base[429] dia_s <- acep_clean(base[429],                      tolower = FALSE,                      rm_cesp = FALSE,                      rm_emoji = FALSE,                      rm_hashtag = FALSE,                      rm_users = FALSE,                      rm_punt = FALSE,                      rm_num = FALSE,                      rm_url = FALSE,                      rm_meses = FALSE,                      rm_dias = TRUE,                      rm_stopwords = FALSE,                      rm_shortwords = FALSE,                      rm_newline = FALSE,                      rm_whitespace = FALSE,                      other_sw = NULL)  cat(paste(\"****SIN rm_dias****\\n\", dia, \"****\\n\", sep=\"\")) #> ****SIN rm_dias**** #> Paro de trenes: el sindicato de la Fraternidad no acatará la conciliación obligatoria que dictó el ministerio de Trabajo y este martes no habrá servicio - Infobae https://t.co/0YH6FDeGXN****  cat(paste(\"****CON rm_dias****\\n\", dia_s, \"****\\n\", sep=\"\")) #> ****CON rm_dias**** #> Paro de trenes: el sindicato de la Fraternidad no acatará la conciliación obligatoria que dictó el ministerio de Trabajo y este  no habrá servicio - Infobae https://t.co/0YH6FDeGXN****"},{"path":"https://agusnieto77.github.io/ACEP/articles/limpieza_de_texto_con_acep.html","id":"stop-words","dir":"Articles","previous_headings":"","what":"Stop words","title":"Limpieza de texto con ACEP","text":"Las stopwords son palabras que tienen distintas funciones aportando la comprensión del texto. Sin embargo, si buscamos realizar un conteo de palabras, resultan contraproducentes ya que se repiten muchas veces y aportan al contenido. Se pueden remover con el parámetro rm_stopwords. La lista de las palabras consideradas “stop words” puede verificarse en el siguiente link: stopwords <- readRDS(url(“https://github.com/HDyCSC/datos/raw/222dd7c060fabc2904c1ceffbea6958f9a275b57/stopwords.rds”))","code":"url <- \"https://github.com/HDyCSC/datos/raw/222dd7c060fabc2904c1ceffbea6958f9a275b57/stopwords.rds\" stopwords <- acep_clean(url) stopw <- base[429] stopw_w <- acep_clean(base[429],                      tolower = FALSE,                      rm_cesp = FALSE,                      rm_emoji = FALSE,                      rm_hashtag = FALSE,                      rm_users = FALSE,                      rm_punt = FALSE,                      rm_num = FALSE,                      rm_url = FALSE,                      rm_meses = FALSE,                      rm_dias = FALSE,                      rm_stopwords = TRUE,                      rm_shortwords = FALSE,                      rm_newline = FALSE,                      rm_whitespace = FALSE,                      other_sw = NULL)  cat(paste(\"****SIN rm_stopwords****\\n\", stopw, \"****\\n\", sep=\"\")) #> ****SIN rm_stopwords**** #> Paro de trenes: el sindicato de la Fraternidad no acatará la conciliación obligatoria que dictó el ministerio de Trabajo y este martes no habrá servicio - Infobae https://t.co/0YH6FDeGXN****  cat(paste(\"****CON rm_stopwords****\\n\", stopw_w, \"****\\n\", sep=\"\")) #> ****CON rm_stopwords**** #> Paro   trenes:   sindicato     Fraternidad   acatará   conciliación obligatoria   dictó   ministerio   Trabajo     martes     servicio - Infobae https://t.co/0YH6FDeGXN****"},{"path":"https://agusnieto77.github.io/ACEP/articles/limpieza_de_texto_con_acep.html","id":"short-words","dir":"Articles","previous_headings":"","what":"Short words","title":"Limpieza de texto con ACEP","text":"En caso de querer eliminar las palabras de 1 sólo caracter que pueden quedar como “residuos” de limpiezas previas y que probablemente tengan contenido útil, lo hacemos con el parámetro rm_shortwords.","code":"short <- base[97] short_s <- acep_clean(base[97],                      tolower = FALSE,                      rm_cesp = FALSE,                      rm_emoji = FALSE,                      rm_hashtag = FALSE,                      rm_users = FALSE,                      rm_punt = FALSE,                      rm_num = FALSE,                      rm_url = FALSE,                      rm_meses = FALSE,                      rm_dias = FALSE,                      rm_stopwords = FALSE,                      rm_shortwords = TRUE,                      rm_newline = FALSE,                      rm_whitespace = FALSE,                      other_sw = NULL)  cat(paste(\"****SIN rm_shortwords****\\n\", short, \"****\\n\", sep=\"\")) #> ****SIN rm_shortwords**** #> @GusDeheza @PolloSobrero NO es un paro de la Fraternidad y x primera vez en mi vida ESTOY DE ACUERDO ..es un apoyo a los JUBILADOS.para q le den un bono a fin de año...jamás nadie se acordó de apoyar a los jubilados x primera vez un gremio rompe un pacto con la CGT..ya q no querían .****  cat(paste(\"****CON rm_shortwords****\\n\", short_s, \"****\\n\", sep=\"\")) #> ****CON rm_shortwords**** #> @GusDeheza @PolloSobrero NO es un paro de la Fraternidad     primera vez en mi vida ESTOY DE ACUERDO ..es un apoyo   los JUBILADOS.para   le den un bono   fin de año...jamás nadie se acordó de apoyar   los jubilados   primera vez un gremio rompe un pacto con la CGT..ya   no querían .****"},{"path":"https://agusnieto77.github.io/ACEP/articles/limpieza_de_texto_con_acep.html","id":"new-line","dir":"Articles","previous_headings":"","what":"New line","title":"Limpieza de texto con ACEP","text":"El parámetro rm_newline se utiliza en caso de querer eliminar los saltos de línea. En este ejemplo hay un salgo de línea antes del link del final del tweet.","code":"newl <- base[2] newl_s <- acep_clean(base[2],                      tolower = FALSE,                      rm_cesp = FALSE,                      rm_emoji = FALSE,                      rm_hashtag = FALSE,                      rm_users = FALSE,                      rm_punt = FALSE,                      rm_num = FALSE,                      rm_url = FALSE,                      rm_meses = FALSE,                      rm_dias = FALSE,                      rm_stopwords = FALSE,                      rm_shortwords = FALSE,                      rm_newline = TRUE,                      rm_whitespace = FALSE,                      other_sw = NULL)  cat(paste(\"****SIN rm_newline****\\n\",newl, \"****\\n\", sep=\"\")) #> ****SIN rm_newline**** #> 👉PROTESTA/La Fraternidad desoye conciliación obligatoria y mantiene paralizados los trenes #> https://t.co/644Ak0HZ7I****  cat(paste(\"****CON rm_newline****\\n\",newl_s, \"****\\n\", sep=\"\")) #> ****CON rm_newline**** #> 👉PROTESTA/La Fraternidad desoye conciliación obligatoria y mantiene paralizados los trenes https://t.co/644Ak0HZ7I****"},{"path":"https://agusnieto77.github.io/ACEP/articles/limpieza_de_texto_con_acep.html","id":"whitespace","dir":"Articles","previous_headings":"","what":"Whitespace","title":"Limpieza de texto con ACEP","text":"Ya sea porque los usuarios tipean dobles espacios por error o por limpiezas previas, suelen quedar espacios en blanco en los textos que ayudan la legibilidad del texto. El parámetro rm_whitespace elimina los espacios en blanco. En este ejemplo, entre “en nuestro” hay un doble espacio.","code":"white <- base[60] white_s <- acep_clean(base[60],                      tolower = FALSE,                      rm_cesp = FALSE,                      rm_emoji = FALSE,                      rm_hashtag = FALSE,                      rm_users = FALSE,                      rm_punt = FALSE,                      rm_num = FALSE,                      rm_url = FALSE,                      rm_meses = FALSE,                      rm_dias = FALSE,                      rm_stopwords = FALSE,                      rm_shortwords = FALSE,                      rm_newline = FALSE,                      rm_whitespace = TRUE,                      other_sw = NULL)  cat(paste(\"****SIN rm_whitespace****\\n\", white, \"****\\n\", sep=\"\")) #> ****SIN rm_whitespace**** #> El @INSST_MITES_GOB presenta 3 infografías con datos estadísticos sobre los accidentes de trabajo en  nuestro país.  #>  #> Consulta toda la info en https://t.co/piMaTqoMiF https://t.co/lcJe8ed0x4****  cat(paste(\"****CON rm_whitespace****\\n\", white_s, \"****\\n\", sep=\"\")) #> ****CON rm_whitespace**** #> El @INSST_MITES_GOB presenta 3 infografías con datos estadísticos sobre los accidentes de trabajo en nuestro país.  #>  #> Consulta toda la info en https://t.co/piMaTqoMiF https://t.co/lcJe8ed0x4****"},{"path":"https://agusnieto77.github.io/ACEP/articles/limpieza_de_texto_con_acep.html","id":"other-stop-words","dir":"Articles","previous_headings":"","what":"Other Stop words","title":"Limpieza de texto con ACEP","text":"Es posible que la lista de stop words sea exhaustiva. Si el usuario desea agregar palabras la lista de stop words, lo puede hacer con el parámetro other_sw. En este ejemplo, agregamos la palabra “Fraternidad” como stop word para que la detect y la remueva. Hay que tener en cuenta que para este caso, también debe estar en TRUE el parámetro “rm_stopwords”. Posteriormente, se agrega entre comillas la palabra de remover. En caso de querer agregar más de una palabra, se puede crear un vector string con cada una de las palabras separadas por coma. En este caso se agregan las palabras “conciliación” y “Fraternidad”.","code":"osw <- base[2] osw_s <- acep_clean(base[2],                      tolower = FALSE,                      rm_cesp = FALSE,                      rm_emoji = FALSE,                      rm_hashtag = FALSE,                      rm_users = FALSE,                      rm_punt = FALSE,                      rm_num = FALSE,                      rm_url = FALSE,                      rm_meses = FALSE,                      rm_dias = FALSE,                      rm_stopwords = TRUE,                      rm_shortwords = FALSE,                      rm_newline = FALSE,                      rm_whitespace = FALSE,                      other_sw = c(\"conciliación\", \"Fraternidad\"))  cat(paste(\"****SIN other_sw****\\n\", osw, \"****\\n\", sep=\"\")) #> ****SIN other_sw**** #> 👉PROTESTA/La Fraternidad desoye conciliación obligatoria y mantiene paralizados los trenes #> https://t.co/644Ak0HZ7I****  cat(paste(\"****CON other_sw****\\n\", osw_s, \"****\\n\", sep=\"\")) #> ****CON other_sw**** #> 👉PROTESTA/La   desoye   obligatoria   mantiene paralizados   trenes #> https://t.co/644Ak0HZ7I****"},{"path":"https://agusnieto77.github.io/ACEP/articles/tokenizar_con_acep.html","id":"funciones-a-presentar","dir":"Articles","previous_headings":"","what":"Funciones a presentar:","title":"Tokenizar con ACEP","text":"En este artículo se explicarán los procesos que realizan las funciones: acep_token() acep_token_table() acep_token_plot()","code":""},{"path":"https://agusnieto77.github.io/ACEP/articles/tokenizar_con_acep.html","id":"función-acep_token","dir":"Articles","previous_headings":"","what":"Función acep_token()","title":"Tokenizar con ACEP","text":"En primer lugar cargamos la librería ACEP. Luego, cargamos una base de tweets para su prueba. Ejecutamos la función acep_token() para los primeros dos elementos de la base. ¿Cuál es el resultado? La función acep_token toma el vector y realiza diferentes acciones: Verifica que el objeto entregado sea un vector (de lo contrario indica un mensaje de advertencia) Cambia todo el texto minúsculas Crea un nuevo data frame con la siguiente información: id_doc (columna que numera el documento) texto (vector original) id_token (numeración de cada uno de los tokens obtenidos) id_token_doc (numeración del token por vector) token (el token propiamente) Cabe mencionar que los tokens quedarán identificados través de los espacios en blanco, es decir, cada palabra es un token. En este resultado podemos ver cómo la función identifica cada observación como un documento aparte (en este caso, cada tweet es un documento identificado en la columna id_doc). La numeración del id_token continúa de principio fin mientras que la numeración del id_token_doc se reinicia cada vez que empieza un nuevo documento. La columna texto presenta el documento completo original y por último podemos visualizar la columna token en la que la función aísla cada token.","code":"library(ACEP)  url <- \"https://observatoriodeconflictividad.org/basesdatos/la_fraternidad.rds\"  base <- acep_load_base(url)[ , c(\"text\")]$text tweets <- acep_token(base[1:2])  tweets |> head() #>   id_doc #> 1      1 #> 2      1 #> 3      1 #> 4      1 #> 5      2 #> 6      2 #>                                                                                                                  texto #> 1                                                                                  @LuisGasulla Googlea La Fraternidad #> 2                                                                                  @LuisGasulla Googlea La Fraternidad #> 3                                                                                  @LuisGasulla Googlea La Fraternidad #> 4                                                                                  @LuisGasulla Googlea La Fraternidad #> 5 👉PROTESTA/La Fraternidad desoye conciliación obligatoria y mantiene paralizados los trenes\\nhttps://t.co/644Ak0HZ7I #> 6 👉PROTESTA/La Fraternidad desoye conciliación obligatoria y mantiene paralizados los trenes\\nhttps://t.co/644Ak0HZ7I #>   id_token id_token_doc         token #> 1        1            1  @luisgasulla #> 2        2            2       googlea #> 3        3            3            la #> 4        4            4   fraternidad #> 5        5            1 👉protesta/la #> 6        6            2   fraternidad"},{"path":"https://agusnieto77.github.io/ACEP/articles/tokenizar_con_acep.html","id":"función-acep_token_table","dir":"Articles","previous_headings":"","what":"Función acep_token_table()","title":"Tokenizar con ACEP","text":"Una vez que tenemos el data frame creado partir de la función acep_token(), podemos utilizar la función acep_table() para obtener un nuevo data frame que nos proveerá la siguiente información: token frec (frecuencia que aparece ese token) prop (el peso que tiene ese token en el total del corpus) Para obtener una tabla que tenga sentido, podemos utilizar en primer lugar la función acep_clean() para deshacernos de los stop words, urls, menciones, # etc. En segunda instancia, creamos un nuevo objeto derivado de la base limpia con acep_token() que nos devuelve, como vimos previamente, una tabla con la información de cada token. Por último, aplicamos la función acep_token_table() la columna token. Por defecto, acep_token_table() nos devuelve los 10 primeros registros, es decir, las 10 palabras con mayor frecuencia. Si quisiéramos modificar la cantidad de palabras, debemos modificar el parámetro u = Suponiendo que queremos obtener los 20 token de mayor frecuencia: Ejemplo: acep_token_table(tabla_tokenizada$token, u = 20)","code":"base_limpia <- acep_clean(base) tabla_tokenizada <- acep_token(base_limpia) head(tabla_tokenizada) #>   id_doc #> 1      1 #> 2      1 #> 3      2 #> 4      2 #> 5      2 #> 6      2 #>                                                                              texto #> 1                                                              googlea fraternidad #> 2                                                              googlea fraternidad #> 3 protesta fraternidad desoye conciliacion obligatoria mantiene paralizados trenes #> 4 protesta fraternidad desoye conciliacion obligatoria mantiene paralizados trenes #> 5 protesta fraternidad desoye conciliacion obligatoria mantiene paralizados trenes #> 6 protesta fraternidad desoye conciliacion obligatoria mantiene paralizados trenes #>   id_token id_token_doc        token #> 1        1            1      googlea #> 2        2            2  fraternidad #> 3        3            1     protesta #> 4        4            2  fraternidad #> 5        5            3       desoye #> 6        6            4 conciliacion acep_token_table(tabla_tokenizada$token) #>          token frec       prop #> 1  fraternidad 5470 0.26719422 #> 2      aprista 1859 0.09080696 #> 3         peru 1742 0.08509183 #> 4  indoamerica 1689 0.08250293 #> 5       eudoro 1648 0.08050020 #> 6     terrones 1648 0.08050020 #> 7      gracias 1614 0.07883939 #> 8        nuevo 1609 0.07859515 #> 9           dr 1598 0.07805784 #> 10     negrete 1595 0.07791129"},{"path":"https://agusnieto77.github.io/ACEP/articles/tokenizar_con_acep.html","id":"función-acep_token_plot","dir":"Articles","previous_headings":"","what":"Función acep_token_plot()","title":"Tokenizar con ACEP","text":"Esta función permite visualizar en un gráfico de barras, los tokens más frecuentes. partir del resultado de acep_token(), podemos obtener el gráfico con los tokens más frecuentes. Por defecto, el resultado serán los 10 tokens más frecuentes, sin embargo, través del parámetro “u =” podemos modificar la cantidad de tokens visualizar. En este ejemplo, tomamos la tabla tokenizada y le indicamos la columna “token” visualizar.","code":"acep_token_plot(tabla_tokenizada$token, u =15)"},{"path":"https://agusnieto77.github.io/ACEP/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Agustin Nieto. Author, maintainer.","code":""},{"path":"https://agusnieto77.github.io/ACEP/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Nieto (2022). ACEP: Analisis Computacional de Eventos de Protesta. https://github.com/agusnieto77/ACEP, https://agusnieto77.github.io/ACEP/.","code":"@Manual{,   title = {ACEP: Analisis Computacional de Eventos de Protesta},   author = {Agustin Nieto},   year = {2022},   note = {https://github.com/agusnieto77/ACEP, https://agusnieto77.github.io/ACEP/}, }"},{"path":[]},{"path":"https://agusnieto77.github.io/ACEP/index.html","id":"vision-general","dir":"","previous_headings":"","what":"Vision general","title":"Analisis Computacional de Eventos de Protesta","text":"ACEP es un paquete de funciones en lenguaje R utiles para la deteccion y el analisis de eventos de protesta en corpus de textos periodisticos. Sus funciones son aplicables cualquier corpus de textos. Ademas de las funciones, ACEP contiene tambien bases de datos con colecciones de notas sobre protestas y una coleccion de diccionarios de palabras conflictivas y otros topicos referidos diferentes aspectos del analisis de eventos de protesta.","code":""},{"path":"https://agusnieto77.github.io/ACEP/index.html","id":"instalacion-de-la-version-estable","dir":"","previous_headings":"","what":"Instalacion de la version estable","title":"Analisis Computacional de Eventos de Protesta","text":"Puedes instalar la version estable de ACEP desde CRAN con:","code":"install.packages(\"ACEP\")"},{"path":"https://agusnieto77.github.io/ACEP/index.html","id":"instalacion-de-la-version-en-desarrollo","dir":"","previous_headings":"","what":"Instalacion de la version en desarrollo","title":"Analisis Computacional de Eventos de Protesta","text":"Puedes instalar la version de desarrollo de ACEP desde GitHub con:","code":"# install.packages(\"devtools\") devtools::install_github(\"agusnieto77/ACEP\")"},{"path":[]},{"path":[]},{"path":"https://agusnieto77.github.io/ACEP/index.html","id":"corpus","dir":"","previous_headings":"","what":"Corpus","title":"Analisis Computacional de Eventos de Protesta","text":"Coleccion de notas del diario La Nacion Subset de notas del diario La Nacion Coleccion de notas del Ecos Diarios Coleccion de notas de la Revista Puerto Coleccion de notas del diario La Nueva Coleccion de notas del diario La Capital","code":""},{"path":"https://agusnieto77.github.io/ACEP/index.html","id":"bases-de-datos-de-eventos-de-protesta-disponibles-online","dir":"","previous_headings":"","what":"Bases de datos de Eventos de protesta disponibles online","title":"Analisis Computacional de Eventos de Protesta","text":"ACLED: Armed Conflict Location & Event Data Project. GDELT: GDELT Project . GPT: Global Protest Tracker. MMPD: Mass Mobilization Protest Data Project. NAVCO: Nonviolent Violent Campaigns Outcomes data project. NVCO: Global Nonviolent Action Database. SCAD: Social Conflict Analysis Database. SPEED: Social, Political Economic Event Database Project. UCDP: Uppsala Conflict Data Program.","code":""},{"path":"https://agusnieto77.github.io/ACEP/index.html","id":"bases-de-datos-de-interes-general","dir":"","previous_headings":"","what":"Bases de datos de interes general","title":"Analisis Computacional de Eventos de Protesta","text":"FMI: FMI Data. BM: Datos de libre acceso del Banco Mundial. OIT: Estadisticas y bases de datos. CEPAL: Datos y estadisticas. DARG: Datos abiertos de Argentina. MGP: Datos abiertos del Municipio de Gral. Pueyrredon, Buenos Aires, Argentina.","code":""},{"path":"https://agusnieto77.github.io/ACEP/index.html","id":"uso-de-las-funciones-del-paquete-acep-un-ejemplo","dir":"","previous_headings":"","what":"Uso de las funciones del paquete ACEP: un ejemplo.","title":"Analisis Computacional de Eventos de Protesta","text":"","code":"# Cargamos la libreria require(ACEP) #> Loading required package: ACEP  # Cargamos la base de notas de la Revista Puerto con la funcion acep_load_base() rev_puerto <- acep_load_base(acep_bases$rp_mdp) #> Descargando...  # Cargamos la etiqueta de la base a descargar rp_mdp <- acep_bases$rp_mdp  # Cargamos la base de notas de la Revista Puerto revista_puerto <- acep_load_base(rp_mdp) #> Descargando...  # Cargamos el diccionario de conflictos de SISMOS dicc_confl_sismos <- acep_diccionarios$dicc_confl_sismos  # Con la funcion acep_frec() contamos la frecuencia de palabras de cada nota # y creamos una nueva columna llamada  n_palabras revista_puerto$n_palabras <- acep_frec(revista_puerto$nota)  # Imprimimos en pantalla la base con la nueva columna de frecuencia de palabras revista_puerto |> head() #> # A tibble: 6 × 7 #>   fecha      titulo                            bajada nota  imagen link  n_pal…¹ #>   <date>     <chr>                             <chr>  <chr> <chr>  <chr>   <dbl> #> 1 2020-12-29 ¡Feliz Año 2021 para todos nuest… Con m… \"Con… https… http…      31 #> 2 2020-12-28 Mapa del trabajo esclavo en agua… Un re… \"El … https… http…    1128 #> 3 2020-12-24 Plantas piden tener garantizada … En Ch… \"El … https… http…     530 #> 4 2020-12-24 Los obreros navales despiden el … En Ma… \"El … https… http…     483 #> 5 2020-12-23 El incumplimiento del régimen de… Se ll… \"Las… https… http…     525 #> 6 2020-12-23 Otro fallo ratifica cautelar con… La Cá… \"La … https… http…     462 #> # … with abbreviated variable name ¹​n_palabras  # Ahora con la funcion acep_men() contamos la frecuencia de menciones de # terminos del diccionario de conflictividad de SISMOS de cada nota y # creamos una nueva columna llamada  conflictos. # Elaboramos un corpus acotado para el ejemplo revista_puerto <- revista_puerto[1:100, ] revista_puerto$conflictos <- acep_men(revista_puerto$nota, dicc_confl_sismos)  # Imprimimos en pantalla la base con la nueva columna de # menciones del diccionario de conflictividad revista_puerto  |> head() #> # A tibble: 6 × 8 #>   fecha      titulo                    bajada nota  imagen link  n_pal…¹ confl…² #>   <date>     <chr>                     <chr>  <chr> <chr>  <chr>   <dbl>   <dbl> #> 1 2020-12-29 ¡Feliz Año 2021 para tod… Con m… \"Con… https… http…      31       0 #> 2 2020-12-28 Mapa del trabajo esclavo… Un re… \"El … https… http…    1128       0 #> 3 2020-12-24 Plantas piden tener gara… En Ch… \"El … https… http…     530       0 #> 4 2020-12-24 Los obreros navales desp… En Ma… \"El … https… http…     483       0 #> 5 2020-12-23 El incumplimiento del ré… Se ll… \"Las… https… http…     525       0 #> 6 2020-12-23 Otro fallo ratifica caut… La Cá… \"La … https… http…     462       0 #> # … with abbreviated variable names ¹​n_palabras, ²​conflictos  # Ahora con la funcion acep_int() calculamos un indice de intensidad de # la conflictividad y creamos una nueva columna llamada  intensidad revista_puerto$intensidad <- acep_int(   revista_puerto$conflictos,   revista_puerto$n_palabras,   3)  # Imprimimos en pantalla la base con la nueva columna de intensidad revista_puerto  |> head() #> # A tibble: 6 × 9 #>   fecha      titulo            bajada nota  imagen link  n_pal…¹ confl…² inten…³ #>   <date>     <chr>             <chr>  <chr> <chr>  <chr>   <dbl>   <dbl>   <dbl> #> 1 2020-12-29 ¡Feliz Año 2021 … Con m… \"Con… https… http…      31       0       0 #> 2 2020-12-28 Mapa del trabajo… Un re… \"El … https… http…    1128       0       0 #> 3 2020-12-24 Plantas piden te… En Ch… \"El … https… http…     530       0       0 #> 4 2020-12-24 Los obreros nava… En Ma… \"El … https… http…     483       0       0 #> 5 2020-12-23 El incumplimient… Se ll… \"Las… https… http…     525       0       0 #> 6 2020-12-23 Otro fallo ratif… La Cá… \"La … https… http…     462       0       0 #> # … with abbreviated variable names ¹​n_palabras, ²​conflictos, ³​intensidad # Volvemos a cargar la base de notas de la Revista Puerto sin procesar revista_puerto <- acep_load_base(rp_mdp) #> Descargando...  # Creamos un subset subset_rp <- revista_puerto[1:100, ]  # Cargamos el diccionario de conflictos de SISMOS dicc_confl_sismos <- acep_diccionarios$dicc_confl_sismos  # Ahora con la funcion acep_db() aplicamos las tres funciones en un solo paso rp_procesada <- acep_db(subset_rp, subset_rp$nota, dicc_confl_sismos, 3)  # Imprimimos en pantalla la base con las tres columna creadas rp_procesada |> head() #> # A tibble: 6 × 9 #>   fecha      titulo            bajada nota  imagen link  n_pal…¹ confl…² inten…³ #>   <date>     <chr>             <chr>  <chr> <chr>  <chr>   <dbl>   <dbl>   <dbl> #> 1 2020-12-29 ¡Feliz Año 2021 … Con m… \"Con… https… http…      31       0       0 #> 2 2020-12-28 Mapa del trabajo… Un re… \"El … https… http…    1128       0       0 #> 3 2020-12-24 Plantas piden te… En Ch… \"El … https… http…     530       0       0 #> 4 2020-12-24 Los obreros nava… En Ma… \"El … https… http…     483       0       0 #> 5 2020-12-23 El incumplimient… Se ll… \"Las… https… http…     525       0       0 #> 6 2020-12-23 Otro fallo ratif… La Cá… \"La … https… http…     462       0       0 #> # … with abbreviated variable names ¹​n_palabras, ²​conflictos, ³​intensidad # Cargamos los datos procesados rp_procesada <- acep_bases$rp_procesada  # Ahora con la funcion acep_rst() elaboramos un resumen estadistico rp_procesada <- acep_rst(   rp_procesada, rp_procesada$fecha, rp_procesada$n_palabras,   rp_procesada$conflictos, st = \"anio\", u = 4)  # Imprimimos en pantalla la base con las metricas de conflictividad rp_procesada |> head() #>     st frecn csn  frecp frecm  intac intensidad int_notas_confl #> 1 2009   632  58 496110  1025 1.2735     0.0021          0.0918 #> 2 2010   680  67 492231  1129 1.6273     0.0023          0.0985 #> 3 2011   601  40 425747   882 1.2204     0.0021          0.0666 #> 4 2012   739  67 564270  1242 1.6841     0.0022          0.0907 #> 5 2013   689  24 525718   758 1.0559     0.0014          0.0348 #> 6 2014   631  30 444823   802 1.2112     0.0018          0.0475  # Ahora con la funcion acep_plot_st() elaboramos un grafico de barras # con menciones del diccionario de conflictividad acep_plot_st(rp_procesada$st, rp_procesada$frecm,  t = \"Evolucion de la conflictividad en el sector pesquero argentino\",  ejex = \"A\\u00f1os analizados\",  ejey = \"Menciones del diccionario de conflictos\",  etiquetax = \"horizontal\") # Ahora con la funcion acep_plot_rst() elaboramos una visualizacion resumen. # con cuatro graficos de barras acep_plot_rst(rp_procesada, tagx = \"vertical\")"},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_bases.html","id":null,"dir":"Reference","previous_headings":"","what":"Coleccion de notas. — acep_bases","title":"Coleccion de notas. — acep_bases","text":"Contiene colecciones de notas de distintos portales noticiosos (una muestra corta). Una segunda coleccion es de notas del periodico bahiense La Nueva. Tambien tiene resumenes estadisticos de las bases completas para el desarrollo de los ejemplos de las funciones.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_bases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coleccion de notas. — acep_bases","text":"","code":"data(acep_bases)"},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_bases.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Coleccion de notas. — acep_bases","text":"Es una lista con 8 objetos. la_nueva es un data frame con notas de La Nueva rev_puerto es un data frame con notas de la Revista Puerto rp_procesada es un data frame con indicadores de conflictividad basados en los datos de la Revista Puerto lc_mdp es una url para la descarga del corpus de notas de La Capital rp_mdp es una url para la descarga del corpus de notas de la Revista Puerto ed_neco es una url para la descarga del corpus de notas de Ecos Diarios ln_bb es una url para la descarga del corpus de notas de La Nueva ln_arg es una url para la descarga del corpus de notas de La Nacion","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_bases.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Coleccion de notas. — acep_bases","text":"Revista Puerto La Nueva","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_bases.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Coleccion de notas. — acep_bases","text":"Nieto, Agustin 2020 «Intersecciones entre historia digital e historia social: un ejercicio de lectura distante sobre la conflictividad maritima en la historia argentina reciente». Drassana: revista del Museu Maritim (28):122-42. (Revista Drassana)","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_bases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coleccion de notas. — acep_bases","text":"","code":"acep_bases$rp_procesada[1:6, ] #> # A tibble: 6 × 4 #>   fecha      n_palabras conflictos intensidad #>   <date>          <int>      <int>      <dbl> #> 1 2020-12-29         31          0     0      #> 2 2020-12-28       1128          4     0.0035 #> 3 2020-12-24        530          0     0      #> 4 2020-12-24        483          3     0.0062 #> 5 2020-12-23        525          1     0.0019 #> 6 2020-12-23        462          0     0"},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_clean.html","id":null,"dir":"Reference","previous_headings":"","what":"Limpieza de texto. — acep_clean","title":"Limpieza de texto. — acep_clean","text":"Funcion que limpia y normaliza las notas/textos.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Limpieza de texto. — acep_clean","text":"","code":"acep_clean(   x,   tolower = TRUE,   rm_cesp = TRUE,   rm_emoji = TRUE,   rm_hashtag = TRUE,   rm_users = TRUE,   rm_punt = TRUE,   rm_num = TRUE,   rm_url = TRUE,   rm_meses = TRUE,   rm_dias = TRUE,   rm_stopwords = TRUE,   rm_shortwords = TRUE,   rm_newline = TRUE,   rm_whitespace = TRUE,   other_sw = NULL,   u = 1 )"},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_clean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Limpieza de texto. — acep_clean","text":"x vector de textos al que se le aplica la funcion de limpieza de texto. tolower convierte los textos minusculas. rm_cesp remueve caracteres especiales. rm_emoji remueve los emojis. rm_hashtag remueve los hashtags. rm_users remueve las menciones de usuarixs de redes sociales. rm_punt remueve la puntuacion. rm_num remueve numeros. rm_url remueve las url. rm_meses remueve los meses del anio. rm_dias remueve los dias de la semana. rm_stopwords remueve palabras vacias. rm_shortwords remueve las palabras cortas. rm_newline remueve los saltos de linea. rm_whitespace remueve los espacios en blanco. other_sw su valor por defecto es NULL, sirve para ampliar el listado de stopwords con un nuevo vector de palabras. u umbral de caracteres para la funcion rm_shortwords.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_clean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Limpieza de texto. — acep_clean","text":"","code":"acep_clean(\"El SUTEBA fue al paro. Reclaman mejoras salariales.\", rm_cesp = FALSE) #> [1] \"suteba paro reclaman mejoras salariales\""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_context.html","id":null,"dir":"Reference","previous_headings":"","what":"Funcion para extraer contexto de palabras o frases. — acep_context","title":"Funcion para extraer contexto de palabras o frases. — acep_context","text":"Funcion que devuelve un data.frame con el contexto de una o más palabras o frases según una ventana de palabras hacia las izquierda y otra ventana de palabras hacia la derecha.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_context.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Funcion para extraer contexto de palabras o frases. — acep_context","text":"","code":"acep_context(texto, clave, izq = 1, der = 1)"},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_context.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Funcion para extraer contexto de palabras o frases. — acep_context","text":"texto vector con los textos procesar. clave vector de palabras clave contextualizar. izq numero de palabras de la ventana hacia la izquierda. der numero de palabras de la ventana hacia la derecha.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_context.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Funcion para extraer contexto de palabras o frases. — acep_context","text":"Si todas las entradas son correctas, la salida sera un data frame con el id de los textos procesado y el contexto de las palabras y/o frases entradas.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_context.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Funcion para extraer contexto de palabras o frases. — acep_context","text":"","code":"texto <- \"El SOIP para por aumento de salarios\" texto_context <- acep_context(texto = texto, clave = \"para\") texto_context #>   doc_id          contexto #> 1      1 SOIP | para | por"},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Frecuencia, menciones e intensidad. — acep_db","title":"Frecuencia, menciones e intensidad. — acep_db","text":"Funcion que usa las funciones acep_frec, acep_men y acep_int y devuelve una tabla con tres columnas nuevas: numero de palabras, numero de menciones del diccionario, indice de intensidad.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Frecuencia, menciones e intensidad. — acep_db","text":"","code":"acep_db(db, t, d, n)"},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Frecuencia, menciones e intensidad. — acep_db","text":"db data frame con los textos procesar. t columna de data frame que contiene el vector de textos procesar. d diccionario en formato vector. n cantidad de decimales del indice de intensidad.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Frecuencia, menciones e intensidad. — acep_db","text":"Si todas las entradas son correctas, la salida sera una base de datos en formato tabular con tres nuevas variables.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_db.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Frecuencia, menciones e intensidad. — acep_db","text":"","code":"df <- data.frame(texto = c(\"El SUTEBA fue al paro. Reclaman mejoras salariales.\", \"El SOIP lleva adelante un plan de lucha con paros y piquetes.\")) diccionario <- c(\"paro\", \"lucha\", \"piquetes\") acep_db(df, df$texto, diccionario, 4) #>                                                           texto n_palabras #> 1           El SUTEBA fue al paro. Reclaman mejoras salariales.          8 #> 2 El SOIP lleva adelante un plan de lucha con paros y piquetes.         12 #>   conflictos intensidad #> 1          1      0.125 #> 2          3      0.250"},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_detect.html","id":null,"dir":"Reference","previous_headings":"","what":"Deteccion de menciones de palabras. — acep_detect","title":"Deteccion de menciones de palabras. — acep_detect","text":"Funcion que detecta de menciones de palabras que refieren conflictos en cada una de las notas/textos.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_detect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deteccion de menciones de palabras. — acep_detect","text":"","code":"acep_detect(x, y, u = 1, tolower = TRUE)"},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_detect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deteccion de menciones de palabras. — acep_detect","text":"x vector de textos al que se le aplica la funcion de deteccion de menciones de palabras del diccionario. y vector de palabras del diccionario utilizado. u umbral para atribuir valor positivo la deteccion de las menciones. tolower convierte los textos minusculas.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_detect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deteccion de menciones de palabras. — acep_detect","text":"","code":"df <- data.frame(texto = c(\"El SUTEBA fue al paro. Reclaman mejoras salariales.\", \"El SOIP lleva adelante un plan de lucha con paros y piquetes.\")) diccionario <- c(\"paro\", \"lucha\", \"piquetes\") df$detect <- acep_detect(df$texto, diccionario) df #>                                                           texto detect #> 1           El SUTEBA fue al paro. Reclaman mejoras salariales.      1 #> 2 El SOIP lleva adelante un plan de lucha con paros y piquetes.      1"},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_diccionarios.html","id":null,"dir":"Reference","previous_headings":"","what":"Coleccion de diccionarios. — acep_diccionarios","title":"Coleccion de diccionarios. — acep_diccionarios","text":"Coleccion de diccionarios que reune diccionarios de diferentes origenes. El diccionario dicc_confl_acep fueron construidos en el marco del Observatorio de Conflictividad de la UNMdP. Los diccionarios dicc_confl_gp y dicc_viol_gp fueron extraidos de Albrieu y Palazzo (2020).","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_diccionarios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coleccion de diccionarios. — acep_diccionarios","text":"","code":"data(acep_diccionarios)"},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_diccionarios.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Coleccion de diccionarios. — acep_diccionarios","text":"Es un objeto de clase 'list' con 3 componentes. dicc_confl_gp es un  vector con palabras de un diciconario de terminos que refeiren conflictos dicc_viol_gp es un  vector con palabras de un diciconario de terminos que refeiren violencia dicc_confl_sismos es un  vector con palabras de un diciconario de terminos que refeiren conflictos","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_diccionarios.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Coleccion de diccionarios. — acep_diccionarios","text":"Revista Puerto La Nueva","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_diccionarios.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Coleccion de diccionarios. — acep_diccionarios","text":"Albrieu, Ramiro y Gabriel Palazzo 2020 «Categorizacion de conflictos sociales en el ambito de los recursos naturales: un estudio de las actividades extractivas mediante la mineria de textos». Revista CEPAL (131):29-59. (Revista CEPAL) Laitano, Guillermina y Agustin Nieto «Analisis computacional de la conflictividad laboral en Mar del Plata durante el gobierno de Cambiemos». Ponencia presentado en VI Workshop - Los conflictos laborales en la Argentina del siglo XX y XXI: un abordaje interdisciplinario de conceptos, problemas y escalas de analisis, Tandil, 2021.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_diccionarios.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coleccion de diccionarios. — acep_diccionarios","text":"","code":"diccionario <- acep_load_base(acep_diccionarios$dicc_viol_gp) #> Descargando... diccionario #>   [1] \"agresivo\"         \"combativo\"        \"provocador\"       #>   [4] \"violento\"         \"agresividad\"      \"belicosidad\"      #>   [7] \"combatividad\"     \"provocación\"      \"emboscada\"        #>  [10] \"celada\"           \"trampa\"           \"asechanza\"        #>  [13] \"artería\"          \"artimaña\"         \"emboscar\"         #>  [16] \"trampear\"         \"asechar\"          \"armas\"            #>  [19] \"armamento\"        \"armado\"           \"asaltar\"          #>  [22] \"atracar\"          \"robar\"            \"agredir\"          #>  [25] \"acometer\"         \"irrumpir\"         \"invadir\"          #>  [28] \"ataque\"           \"embate\"           \"irrupción\"        #>  [31] \"combate\"          \"lucha\"            \"agresión\"         #>  [34] \"golpear\"          \"golpe\"            \"sanguinario\"      #>  [37] \"choque\"           \"asalto\"           \"atropello\"        #>  [40] \"atentado\"         \"coletazo\"         \"bomba\"            #>  [43] \"explosivo\"        \"granada\"          \"munición\"         #>  [46] \"bala\"             \"brutalidad\"       \"bestialidad\"      #>  [49] \"ferocidad\"        \"crueldad\"         \"atrocidad\"        #>  [52] \"monstruosidad\"    \"irracionalidad\"   \"vandalismo\"       #>  [55] \"salvajada\"        \"grosería\"         \"masacre\"          #>  [58] \"matanza\"          \"mortandad\"        \"hecatombe\"        #>  [61] \"catástrofe\"       \"degollina\"        \"aplastar\"         #>  [64] \"triturar\"         \"reventar\"         \"destripar\"        #>  [67] \"moler\"            \"aplastamiento\"    \"mortal\"           #>  [70] \"mortífero\"        \"letal\"            \"fatídico\"         #>  [73] \"fatal\"            \"funesto\"          \"disparar\"         #>  [76] \"tirotear\"         \"ametrallar\"       \"despedir\"         #>  [79] \"expulsar\"         \"destituir\"        \"guerrilla\"        #>  [82] \"guerrillero\"      \"milicia\"          \"arma\"             #>  [85] \"pistola\"          \"revólver\"         \"pistolete\"        #>  [88] \"ametralladora\"    \"metralleta\"       \"pistolero\"        #>  [91] \"atracador\"        \"bandido\"          \"forajido\"         #>  [94] \"delincuente\"      \"gánster\"          \"terrorista\"       #>  [97] \"asesino\"          \"matar\"            \"asesinar\"         #> [100] \"ahorcar\"          \"ahogar\"           \"decapitar\"        #> [103] \"desnucar\"         \"degollar\"         \"fusilar\"          #> [106] \"guillotinar\"      \"asfixiar\"         \"electrocutar\"     #> [109] \"envenenar\"        \"linchar\"          \"asesinato\"        #> [112] \"crimen\"           \"homicidio\"        \"delito\"           #> [115] \"muerte\"           \"parricidio\"       \"fratricidio\"      #> [118] \"magnicidio\"       \"regicidio\"        \"criminal\"         #> [121] \"homicida\"         \"monstruo\"         \"engendro\"         #> [124] \"deforme\"          \"monstruosa\"       \"rebelarse\"        #> [127] \"incitar\"          \"sublevarse\"       \"insubordinarse\"   #> [130] \"levantarse\"       \"alzarse\"          \"amotinarse\"       #> [133] \"insurreccionarse\" \"rebelión\"         \"levantamiento\"    #> [136] \"revuelta\"         \"alzamiento\"       \"revolución\"       #> [139] \"subversión\"       \"conspiración\"     \"conjuración\"      #> [142] \"sedición\"         \"insurrección\"     \"motín\"            #> [145] \"acuchillar\"       \"apuñalar\"         \"lesionar\"         #> [148] \"violencia\"        \"exabrupto\"        \"coacción\"         #> [151] \"profanación\"      \"furia\"            \"ensañamiento\"     #> [154] \"violación\"        \"implacable\"       \"furioso\"          #> [157] \"guerrero\"         \"soldado\"          \"militar\"          #> [160] \"látigo\"           \"azote\"            \"fusta\"            #> [163] \"tralla\"           \"vergajo\"          \"flagelo\"          #> [166] \"zurriago\"         \"latigazos\"        \"azotando\"         #> [169] \"litigar\"          \"azotar\"           \"fustigar\"         #> [172] \"flagelar\""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_frec.html","id":null,"dir":"Reference","previous_headings":"","what":"Frecuencia de palabras totales. — acep_frec","title":"Frecuencia de palabras totales. — acep_frec","text":"Funcion que cuenta la frecuencia de palabras totales en cada una de las notas/textos.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_frec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Frecuencia de palabras totales. — acep_frec","text":"","code":"acep_frec(x)"},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_frec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Frecuencia de palabras totales. — acep_frec","text":"x vector de textos al que se le aplica la funcion de conteo de la frecuencia de palabras.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_frec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Frecuencia de palabras totales. — acep_frec","text":"Si todas las entradas son correctas, la salida sera un vector con una frecuencia de palabras.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_frec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Frecuencia de palabras totales. — acep_frec","text":"","code":"acep_frec(\"El SUTEBA fue al paro. Reclaman mejoras salariales.\") #> [1] 8"},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_int.html","id":null,"dir":"Reference","previous_headings":"","what":"Indice de intensidad. — acep_int","title":"Indice de intensidad. — acep_int","text":"Funcion que elabora un indice de intensidad en base la relacion entre palabras totales y palabras del diccionario presentes en el texto.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_int.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Indice de intensidad. — acep_int","text":"","code":"acep_int(pc, pt, decimales = 4)"},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_int.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Indice de intensidad. — acep_int","text":"pc vector numerico con la frecuencia de palabras conflictivas presentes en cada texto. pt vector de palabras totales en cada texto. decimales cantidad de decimales, por defecto tiene 4 pero se puede modificar.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_int.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Indice de intensidad. — acep_int","text":"Si todas las entradas son correctas, la salida sera un vector numerico.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_int.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Indice de intensidad. — acep_int","text":"","code":"conflictos <- c(1, 5, 0, 3, 7) palabras <- c(4, 11, 12, 9, 34) acep_int(conflictos, palabras, 3) #> [1] 0.250 0.455 0.000 0.333 0.206"},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_load_base.html","id":null,"dir":"Reference","previous_headings":"","what":"Carga bases de datos creadas por el Observatorio. — acep_load_base","title":"Carga bases de datos creadas por el Observatorio. — acep_load_base","text":"Funcion para cargar bases de datos disponibles online. Por ahora estan disponibles las siguientes bases: Revista Puerto 'rp_mdp'; La Nueva 'ln_bb', La Capital 'lc_mdp', Ecos Diarios 'ed_neco', La Nacion 'ln_arg'","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_load_base.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Carga bases de datos creadas por el Observatorio. — acep_load_base","text":"","code":"acep_load_base(tag)"},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_load_base.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Carga bases de datos creadas por el Observatorio. — acep_load_base","text":"tag etiqueta identificatoria del data frame cargar: acep_bases$rp_mdp, acep_bases$ln_bb, acep_bases$lc_mdp, acep_bases$ed_neco, acep_bases$ln_arg","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_load_base.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Carga bases de datos creadas por el Observatorio. — acep_load_base","text":"Si todas las entradas son correctas, la salida sera una base de datos en formato tabular con un corpus de notas.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_load_base.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Carga bases de datos creadas por el Observatorio. — acep_load_base","text":"","code":"bd_sismos <- acep_bases$rev_puerto acep_load_base(tag = bd_sismos) |> head() #> Descargando... #> # A tibble: 6 × 3 #>   fecha      titulo                                                        nota  #>   <date>     <chr>                                                         <chr> #> 1 2019-03-29 Astillero Contessi botó al Luca Santino, un fresquero de nue… \"Tra… #> 2 2019-03-29 Di Leva despidió a trabajadores de El Marisco y Sebastián Ga… \"Tra… #> 3 2019-03-29 El Consejo aprobó la apertura al norte para el calamar        \"En … #> 4 2019-03-28 “Todos los empresarios me dicen que tendrían que achicarse”   \"Cri… #> 5 2019-03-28 En el Puerto de Montevideo siguen bajando un muerto por mes   \"La … #> 6 2019-03-28 Habilitan el muelle Piedra Buena para descarga de congelador… \"La …"},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_men.html","id":null,"dir":"Reference","previous_headings":"","what":"Frecuencia de menciones de palabras. — acep_men","title":"Frecuencia de menciones de palabras. — acep_men","text":"Funcion que cuenta la frecuencia de menciones de palabras que refieren conflictos en cada una de las notas/textos.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_men.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Frecuencia de menciones de palabras. — acep_men","text":"","code":"acep_men(x, y, tolower = TRUE)"},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_men.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Frecuencia de menciones de palabras. — acep_men","text":"x vector de textos al que se le aplica la funcion de conteo de la frecuencia de menciones de palabras del diccionario. y vector de palabras del diccionario utilizado. tolower convierte los textos minusculas.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_men.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Frecuencia de menciones de palabras. — acep_men","text":"Si todas las entradas son correctas, la salida sera un vector con una frecuencia de palabras de un diccionario.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_men.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Frecuencia de menciones de palabras. — acep_men","text":"","code":"df <- data.frame(texto = c(\"El SUTEBA fue al paro. Reclaman mejoras salariales.\", \"El SOIP lleva adelante un plan de lucha con paros y piquetes.\")) diccionario <- c(\"paro\", \"lucha\", \"piquetes\") df$detect <- acep_men(df$texto, diccionario) df #>                                                           texto detect #> 1           El SUTEBA fue al paro. Reclaman mejoras salariales.      1 #> 2 El SOIP lleva adelante un plan de lucha con paros y piquetes.      3"},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_plot_rst.html","id":null,"dir":"Reference","previous_headings":"","what":"Resumen visual de la serie temporal de los indices de conflictividad. — acep_plot_rst","title":"Resumen visual de la serie temporal de los indices de conflictividad. — acep_plot_rst","text":"Funcion que devuelve un panel visual de cuatro graficos de barras con variables proxy de los indices de conflictividad agrupados por segmento de tiempo.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_plot_rst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resumen visual de la serie temporal de los indices de conflictividad. — acep_plot_rst","text":"","code":"acep_plot_rst(datos, tagx = \"horizontal\")"},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_plot_rst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resumen visual de la serie temporal de los indices de conflictividad. — acep_plot_rst","text":"datos data frame con datos procesados. tagx orientacion de las etiquetas del eje x ('horizontal' | 'vertical').","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_plot_rst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resumen visual de la serie temporal de los indices de conflictividad. — acep_plot_rst","text":"Si todas las entradas son correctas, la salida sera una imagen de cuatro paneles.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_plot_rst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resumen visual de la serie temporal de los indices de conflictividad. — acep_plot_rst","text":"","code":"datos <- acep_bases$rp_procesada fecha <- datos$fecha n_palabras <- datos$n_palabras conflictos <- datos$conflictos datos_procesados_anio <- acep_rst(datos, fecha, n_palabras, conflictos, st = 'anio') acep_plot_rst(datos_procesados_anio, tagx = 'vertical')"},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_plot_st.html","id":null,"dir":"Reference","previous_headings":"","what":"Grafico de barras de la serie temporal de indices de conflictividad. — acep_plot_st","title":"Grafico de barras de la serie temporal de indices de conflictividad. — acep_plot_st","text":"Funcion que devuelve un grafico de barras con la serie temporal de indices de conflictividad por dia, mes o anio.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_plot_st.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grafico de barras de la serie temporal de indices de conflictividad. — acep_plot_st","text":"","code":"acep_plot_st(x, y, t = \"\", ejex = \"\", ejey = \"\", etiquetax = \"horizontal\")"},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_plot_st.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grafico de barras de la serie temporal de indices de conflictividad. — acep_plot_st","text":"x vector de valores del eje x (por ejemplo, fechas). y vector de valores numericos del eje y (por ejemplo, menciones). t titulo del grafico. ejex nombre del eje x. ejey nombre del eje y. etiquetax orientacion de las etiquetas del eje x ('horizontal' | 'vertical').","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_plot_st.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grafico de barras de la serie temporal de indices de conflictividad. — acep_plot_st","text":"Si todas las entradas son correctas, la salida sera una imagen de un panel.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_plot_st.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grafico de barras de la serie temporal de indices de conflictividad. — acep_plot_st","text":"","code":"datos <- acep_bases$rp_procesada fecha <- datos$fecha n_palabras <- datos$n_palabras conflictos <- datos$conflictos dpa <- acep_rst(datos, fecha, n_palabras, conflictos, st = 'anio') acep_plot_st( dpa$st, dpa$frecm, t = 'Evolucion de la conflictividad en el sector pesquero argentino', ejex = 'Anios analizados', ejey = 'Menciones de terminos del diccionario de conflictos', etiquetax = 'horizontal')"},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_rs.html","id":null,"dir":"Reference","previous_headings":"","what":"Cadenas de caracteres para limpiar y normalizar textos. — acep_rs","title":"Cadenas de caracteres para limpiar y normalizar textos. — acep_rs","text":"Cadenas de caracteres y expresiones regulares para limpiar y normalizar textos.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_rs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cadenas de caracteres para limpiar y normalizar textos. — acep_rs","text":"","code":"data(acep_rs)"},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_rs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cadenas de caracteres para limpiar y normalizar textos. — acep_rs","text":"Son cadenas de caracteres. stopwords es un string de palabras vacias. dias es un string de dias. meses es un string de meses. emoji es un string con expresiones regulares para emojis. sintildes es un string de letras sin tildes. tildes es un string de letras con tildes.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_rs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cadenas de caracteres para limpiar y normalizar textos. — acep_rs","text":"","code":"print(acep_rs) #> $sintildes #> [1] \"SZszYAAAAAACEEEEIIIIDNOOOOOUUUUYaaaaaaceeeeiiiidnooooouuuuyy\" #>  #> $url #> [1] \"http\\\\S+|ftp\\\\S+|Http\\\\S+|Ftp\\\\S+|HTTP\\\\S+|FTP\\\\S+\" #>  #> $users #> [1] \"@\\\\S+\" #>  #> $saltos #> [1] \"[ \\t\\r\\n]\" #>  #> $espacios #> [1] \"^ *|(?<= ) | *$\" #>  #> $hashtag #> [1] \"#\\\\S+\" #>  #> $num #> [1] \"[[:digit:]]*\" #>"},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_rst.html","id":null,"dir":"Reference","previous_headings":"","what":"Serie temporal de indices de conflictividad. — acep_rst","title":"Serie temporal de indices de conflictividad. — acep_rst","text":"Funcion que devuelve los indices de conflictividad agrupados por segmento de tiempo: dia, mes, anio.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_rst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Serie temporal de indices de conflictividad. — acep_rst","text":"","code":"acep_rst(datos, fecha, frecp, frecm, st = \"mes\", u = 2, d = 4)"},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_rst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Serie temporal de indices de conflictividad. — acep_rst","text":"datos data frame con los textos procesar. fecha columna de data frame que contiene el vector de fechas en formato date. frecp columna de data frame que contiene el vector de frecuencia de palabras por texto. frecm columna de data frame que contiene el vector de menciones del diccionario por texto. st parametro para establecer el segmento temporal ser agrupado: anio, mes, dia. u umbral de menciones para contabilizar una nota como nota que refiere un conflicto. d cantidad de decimales, por defecto tiene 4 pero se puede modificar.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_rst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Serie temporal de indices de conflictividad. — acep_rst","text":"Si todas las entradas son correctas, la salida sera una base de datos en formato tabular con nuevas variables.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_rst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Serie temporal de indices de conflictividad. — acep_rst","text":"","code":"datos <- acep_bases$rp_procesada fecha <- datos$fecha n_palabras <- datos$n_palabras conflictos <- datos$conflictos datos_procesados_anio <- acep_rst(datos, fecha, n_palabras, conflictos, st = 'anio', u = 4) datos_procesados_mes <- acep_rst(datos, fecha, n_palabras, conflictos) datos_procesados_dia <- acep_rst(datos, fecha, n_palabras, conflictos, st = 'dia', d = 3) datos_procesados_anio |> head() #>     st frecn csn  frecp frecm  intac intensidad int_notas_confl #> 1 2009   632  58 496110  1025 1.2735     0.0021          0.0918 #> 2 2010   680  67 492231  1129 1.6273     0.0023          0.0985 #> 3 2011   601  40 425747   882 1.2204     0.0021          0.0666 #> 4 2012   739  67 564270  1242 1.6841     0.0022          0.0907 #> 5 2013   689  24 525718   758 1.0559     0.0014          0.0348 #> 6 2014   631  30 444823   802 1.2112     0.0018          0.0475 datos_procesados_mes |> head() #>        st frecn csn frecp frecm  intac intensidad int_notas_confl #> 1 2009-03    75  19 61252   146 0.1682     0.0024          0.2533 #> 2 2009-04    58   7 44076    75 0.0925     0.0017          0.1207 #> 3 2009-05    58   7 49037    55 0.0633     0.0011          0.1207 #> 4 2009-06    71   8 55727    82 0.1059     0.0015          0.1127 #> 5 2009-07    65  14 53299   110 0.1307     0.0021          0.2154 #> 6 2009-08    60  13 45458    94 0.1124     0.0021          0.2167 datos_procesados_dia |> head() #>           st frecn csn frecp frecm  intac intensidad int_notas_confl #> 1 2009-03-02    10   4 10941    24 0.0201      0.002           0.400 #> 2 2009-03-03     3   0  2313     2 0.0019      0.001           0.000 #> 3 2009-03-04     5   1  4168    11 0.0092      0.003           0.200 #> 4 2009-03-05     3   1  2189     7 0.0090      0.003           0.333 #> 5 2009-03-06     5   1  3895     8 0.0098      0.002           0.200 #> 6 2009-03-09     3   0  2031     2 0.0034      0.001           0.000"},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_svo.html","id":null,"dir":"Reference","previous_headings":"","what":"Funcion para extraer triplets SVO (Sujeto-Verbo-Objeto). — acep_svo","title":"Funcion para extraer triplets SVO (Sujeto-Verbo-Objeto). — acep_svo","text":"Funcion que devuelve cinco objetos data.frame con etiquetado POS (modelo udpipe) y relaciones sintacticas (modelo rsyntax) que permiten reconstruir estructuras sintacticas como SVO y Sujeto-Predicado. Una vez seleccionadas las notas periodisticas referidas conflictos, esta función permite extraer sujetos de la protesta, acción realizada y objeto(s) de la acción.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_svo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Funcion para extraer triplets SVO (Sujeto-Verbo-Objeto). — acep_svo","text":"","code":"acep_svo(   texto,   modelo = \"spanish\",   prof_s = 2,   prof_o = 2,   relaciones = c(\"flat\", \"fixed\", \"compount\"),   conexiones = FALSE,   rel_s = c(\"nsubj\", \"conj\"),   rel_o = c(\"obj\", \"obl\", \"nmod\"),   rel_evs = \"nsubj\",   rel_evp = \"obj\",   u = 1 )"},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_svo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Funcion para extraer triplets SVO (Sujeto-Verbo-Objeto). — acep_svo","text":"texto vector con los textos procesar. modelo idioma del modelo de etiquetado POS del paquete udpipe. prof_s profundidad de relaciones sintacticas para el sujeto. prof_o profundidad de relaciones sintacticas para el objeto. relaciones vector con las relaciones de analisis sintactico del paquete rsyntax. conexiones es un parámetro heredado del paquete rsyntax que controla el comportamiento si la profundidad es > 1 y se utilizan filtros. Si es FALSE, se recuperan todos los padres/hijos hasta la profundidad dada, y luego se filtran. De esta manera, los nietos que satisfacen las condiciones del filtro se recuperan incluso si sus padres satisfacen las condiciones. Si es TRUE, el filtro se aplica en cada nivel de profundidad, de modo que sólo se recuperan las ramas totalmente conectadas de los nodos que satisfacen las condiciones. rel_s vector de etiquetas de relaciones sintacticas en el sujeto. rel_o vector de etiquetas de relaciones sintacticas en el objeto. rel_evs etiqueta de relaciones ser agregada en la reconstruccion del sujeto. rel_evp etiqueta de relaciones ser agregada en la reconstruccion del objeto. u numero entero que indica el umbral de palabras del objeto en la reconstruccion SVO.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_svo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Funcion para extraer triplets SVO (Sujeto-Verbo-Objeto). — acep_svo","text":"Si todas las entradas son correctas, la salida sera una lista con tres bases de datos en formato tabular.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_svo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Funcion para extraer triplets SVO (Sujeto-Verbo-Objeto). — acep_svo","text":"","code":"texto <- \"El SOIP declara la huelga en demanda de aumento salarial.\" texto_svo <- acep_svo(texto) #> Downloading udpipe model from https://raw.githubusercontent.com/jwijffels/udpipe.models.ud.2.5/master/inst/udpipe-ud-2.5-191206/spanish-gsd-ud-2.5-191206.udpipe to /home/runner/work/ACEP/ACEP/docs/reference/spanish-gsd-ud-2.5-191206.udpipe #>  - This model has been trained on version 2.5 of data from https://universaldependencies.org #>  - The model is distributed under the CC-BY-SA-NC license: https://creativecommons.org/licenses/by-nc-sa/4.0 #>  - Visit https://github.com/jwijffels/udpipe.models.ud.2.5 for model license details. #>  - For a list of all models and their licenses (most models you can download with this package have either a CC-BY-SA or a CC-BY-SA-NC license) read the documentation at ?udpipe_download_model. For building your own models: visit the documentation by typing vignette('udpipe-train', package = 'udpipe') #> Downloading finished, model stored at '/home/runner/work/ACEP/ACEP/docs/reference/spanish-gsd-ud-2.5-191206.udpipe' texto_svo$acep_list_svo #> # A tibble: 1 × 4 #>   doc_id parrafo_id oracion_id eventos                   #>    <int>      <int>      <int> <chr>                     #> 1      1          1          1 SOIP -> declara -> huelga"},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Tokenizador. — acep_token","title":"Tokenizador. — acep_token","text":"Funcion que tokeniza las notas/textos.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tokenizador. — acep_token","text":"","code":"acep_token(x, tolower = TRUE)"},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tokenizador. — acep_token","text":"x vector de textos al que se le aplica la funcion de tokenizacion. tolower convierte los textos minusculas.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_token.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tokenizador. — acep_token","text":"","code":"acep_token(\"Huelga de obreros del pescado en el puerto\") #>   id_doc                                      texto id_token id_token_doc #> 1      1 Huelga de obreros del pescado en el puerto        1            1 #> 2      1 Huelga de obreros del pescado en el puerto        2            2 #> 3      1 Huelga de obreros del pescado en el puerto        3            3 #> 4      1 Huelga de obreros del pescado en el puerto        4            4 #> 5      1 Huelga de obreros del pescado en el puerto        5            5 #> 6      1 Huelga de obreros del pescado en el puerto        6            6 #> 7      1 Huelga de obreros del pescado en el puerto        7            7 #> 8      1 Huelga de obreros del pescado en el puerto        8            8 #>     token #> 1  huelga #> 2      de #> 3 obreros #> 4     del #> 5 pescado #> 6      en #> 7      el #> 8  puerto"},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_token_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Grafico de barras de palabras mas recurrentes en un corpus. — acep_token_plot","title":"Grafico de barras de palabras mas recurrentes en un corpus. — acep_token_plot","text":"Funcion que devuelve un grafico de barras con las palabras mas recurrentes en un corpus textual.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_token_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grafico de barras de palabras mas recurrentes en un corpus. — acep_token_plot","text":"","code":"acep_token_plot(x, u = 10, frec = TRUE)"},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_token_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grafico de barras de palabras mas recurrentes en un corpus. — acep_token_plot","text":"x vector de palabras tokenizadas. u numero de corte para el top de palabras mas frecuentes. frec parametro para determinar si los valores se visualizaran como frecuencia absoluta o relativa.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_token_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grafico de barras de palabras mas recurrentes en un corpus. — acep_token_plot","text":"Si todas las entradas son correctas, la salida sera un grafico de barras.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_token_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grafico de barras de palabras mas recurrentes en un corpus. — acep_token_plot","text":"","code":"tokens <- c(rep(\"paro\",15), rep(\"piquete\",25), rep(\"corte\",20), rep(\"manifestacion\",10), rep(\"bloqueo\",5), rep(\"alerta\",16), rep(\"ciudad\",12), rep(\"sindicato\",11), rep(\"paritaria\",14), rep(\"huelga\",14), rep(\"escrache\",15)) acep_token_plot(tokens)"},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_token_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Tabla de frecuencia de palabras tokenizadas. — acep_token_table","title":"Tabla de frecuencia de palabras tokenizadas. — acep_token_table","text":"Funcion que cuenta la frecuencia de palabras tokenizadas.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_token_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tabla de frecuencia de palabras tokenizadas. — acep_token_table","text":"","code":"acep_token_table(x, u = 10)"},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_token_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tabla de frecuencia de palabras tokenizadas. — acep_token_table","text":"x vector de palabras tokenizadas. u numero de corte para el top de palabras mas frecuentes.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_token_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tabla de frecuencia de palabras tokenizadas. — acep_token_table","text":"Si todas las entradas son correctas, la salida sera una tabla con la frecuencia relativa y absoluta de palabras tokenizadas.","code":""},{"path":"https://agusnieto77.github.io/ACEP/reference/acep_token_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tabla de frecuencia de palabras tokenizadas. — acep_token_table","text":"","code":"tokens <- c(rep(\"paro\",15), rep(\"piquete\",25), rep(\"corte\",20), rep(\"manifestacion\",10), rep(\"bloqueo\",5), rep(\"alerta\",16), rep(\"ciudad\",12), rep(\"sindicato\",11), rep(\"paritaria\",14), rep(\"huelga\",14), rep(\"escrache\",15)) acep_token_table(tokens) #>            token frec       prop #> 1        piquete   25 0.16447368 #> 2          corte   20 0.13157895 #> 3         alerta   16 0.10526316 #> 4       escrache   15 0.09868421 #> 5           paro   15 0.09868421 #> 6         huelga   14 0.09210526 #> 7      paritaria   14 0.09210526 #> 8         ciudad   12 0.07894737 #> 9      sindicato   11 0.07236842 #> 10 manifestacion   10 0.06578947"},{"path":"https://agusnieto77.github.io/ACEP/news/index.html","id":"acep-0029000-versión-en-desarrollo","dir":"Changelog","previous_headings":"","what":"ACEP 0.0.2.9000 (versión en desarrollo)","title":"ACEP 0.0.2.9000 (versión en desarrollo)","text":"Se mejoraron las nuevas funciones para limpieza de texto, tokenización y deteccion de menciones.","code":""},{"path":"https://agusnieto77.github.io/ACEP/news/index.html","id":"acep-0021","dir":"Changelog","previous_headings":"","what":"ACEP 0.0.21","title":"ACEP 0.0.21","text":"CRAN release: 2022-11-05 Se mejoraron las nuevas funciones para limpieza de texto, tokenización y deteccion de menciones.","code":""},{"path":"https://agusnieto77.github.io/ACEP/news/index.html","id":"acep-002","dir":"Changelog","previous_headings":"","what":"ACEP 0.0.2","title":"ACEP 0.0.2","text":"CRAN release: 2022-10-30 Se agregaron nuevas funciones para limpieza de texto, tokenización y deteccion de menciones.","code":""},{"path":"https://agusnieto77.github.io/ACEP/news/index.html","id":"acep-0019000-versión-en-desarrollo","dir":"Changelog","previous_headings":"","what":"ACEP 0.0.1.9000 (versión en desarrollo)","title":"ACEP 0.0.1.9000 (versión en desarrollo)","text":"se agregaron nuevas funciones. se agregaron nuevas bases de datos. se agregaron nuevas descripciones. se agregaron nuevos ejemplos.","code":""},{"path":"https://agusnieto77.github.io/ACEP/news/index.html","id":"acep-001","dir":"Changelog","previous_headings":"","what":"ACEP 0.0.1","title":"ACEP 0.0.1","text":"CRAN release: 2022-07-18 Se ha añadido un archivo NEWS.md para seguir los cambios en el paquete.","code":""}]
